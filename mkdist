#!/bin/bash

# mkdist: Facette distribution helper
#         by Vincent Batoufflet <vincent@batoufflet.info>

print_usage() {
    cat <<EOF
Usage: $(basename $0) TARGET [BRANCH]

Targets:
   binary  build a binary distribution tarball
   debian  build a Debian package
EOF
}

dist_binary() {
    cd ${tmp_dir}/facette

    echo "*** Installing build dependencies"
    GOOS="" GOARCH="" GOBIN=/usr/local/bin go get github.com/jteeuwen/go-bindata/...

    echo "*** Building binary"
    PATH=${PATH}:${GOPATH}/bin make BUILD_TAGS="builtin_assets" build

    echo "*** Generating binary tarball"
    tar --transform "flags=r;s|.*\/||" \
        -cJvf /tmp/build/facette_${version}_${GOOS}-${GOARCH}.tar.xz \
        build/facette-${GOOS}-${GOARCH}/bin/* LICENSE README.md
}

dist_debian() {
    cd ${tmp_dir}/facette

    if [[ "${version}" =~ (.+)dev$ ]]; then
        debian_version="${BASH_REMATCH[1]}-0~git$(date +%Y%m%d).$(git rev-parse --short HEAD)"
    elif [[ "${version}" =~ (.+)(alpha|beta|dev|rc)([0-9]+)$ ]]; then
        debian_version="${BASH_REMATCH[1]}-1~${BASH_REMATCH[2]}${BASH_REMATCH[3]}"
    else
        debian_version="${version}-1"
    fi

    target_arch=$(dpkg-architecture -q DEB_TARGET_ARCH)
    target_suite=$(lsb_release -sc)

    sed \
        -e "s/%%VERSION%%/${version}/g" \
        -e "s/%%DEBIAN_VERSION%%/${debian_version}/g" \
        -e "s/%%DATE%%/$(date -R)/g" \
        debian/changelog.tmpl >debian/changelog

    echo "*** Generating source tarball"
    tar --exclude=debian --exclude=.git --transform "flags=r;s|^|facette-${version}|" \
        -cJvf ../facette_${debian_version%-*}.orig.tar.xz .

    echo "*** Pre-installing node dependencies"
    make node_modules
    echo "extend-diff-ignore = \"^node_modules/\"" >debian/source/options

    echo "*** Building package"
    DEB_BUILD_OPTIONS=nocheck debuild \
        --preserve-envvar PATH \
        --preserve-envvar CC \
        --preserve-envvar CGO_ENABLED \
        --preserve-envvar GOOS \
        --preserve-envvar GOARCH \
        --preserve-envvar GOARM \
        -us -uc -a${target_arch} -d

    echo "*** Copying package"
    cp ../facette_${debian_version}_${target_arch}.deb \
        /tmp/build/facette_${version}_${target_suite}-${target_arch}.deb
}

if [[ $# -lt 1 || $# -gt 2 ]]; then
    print_usage >&2
    exit 1
fi

target=$1
branch=$2

case "${target}" in
binary|debian)
    # Fetch sources
    tmp_dir=$(mktemp -d)
    trap 'rm -rf ${tmp_dir}' EXIT INT QUIT TERM

    echo "*** Fetching sources"

    [[ -z "${branch}" ]] && branch="master"
    git -C ${tmp_dir} clone -b ${branch} https://github.com/facette/facette.git

    # Get version
    version=$(awk '$1 == "VERSION" { print $3 }' ${tmp_dir}/facette/Makefile)

    dist_${target}
    ;;

*)
    printf "Error: unknown \"%s\" target\n" ${target} >&2
    print_usage >&2
    exit 1
    ;;
esac

# vim: ts=4 sw=4 et
